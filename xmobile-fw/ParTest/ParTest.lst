   1               		.file	"ParTest.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 171               	.global	vParTestInitialise
 173               	vParTestInitialise:
 174               		.stabd	46,0,0
   1:ParTest/ParTest.c **** /*
   2:ParTest/ParTest.c ****  * FreeRTOS Kernel V10.0.0
   3:ParTest/ParTest.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ParTest/ParTest.c ****  *
   5:ParTest/ParTest.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:ParTest/ParTest.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:ParTest/ParTest.c ****  * the Software without restriction, including without limitation the rights to
   8:ParTest/ParTest.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:ParTest/ParTest.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:ParTest/ParTest.c ****  * subject to the following conditions:
  11:ParTest/ParTest.c ****  *
  12:ParTest/ParTest.c ****  * The above copyright notice and this permission notice shall be included in all
  13:ParTest/ParTest.c ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:ParTest/ParTest.c ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:ParTest/ParTest.c ****  *
  16:ParTest/ParTest.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:ParTest/ParTest.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:ParTest/ParTest.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:ParTest/ParTest.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:ParTest/ParTest.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:ParTest/ParTest.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:ParTest/ParTest.c ****  *
  23:ParTest/ParTest.c ****  * http://www.FreeRTOS.org
  24:ParTest/ParTest.c ****  * http://aws.amazon.com/freertos
  25:ParTest/ParTest.c ****  *
  26:ParTest/ParTest.c ****  * 1 tab == 4 spaces!
  27:ParTest/ParTest.c ****  */
  28:ParTest/ParTest.c **** 
  29:ParTest/ParTest.c **** /* 
  30:ParTest/ParTest.c **** Changes from V2.0.0
  31:ParTest/ParTest.c **** 
  32:ParTest/ParTest.c **** 	+ Use scheduler suspends in place of critical sections.
  33:ParTest/ParTest.c **** 
  34:ParTest/ParTest.c **** Changes from V2.6.0
  35:ParTest/ParTest.c **** 
  36:ParTest/ParTest.c **** 	+ Replaced the inb() and outb() functions with direct memory
  37:ParTest/ParTest.c **** 	  access.  This allows the port to be built with the 20050414 build of
  38:ParTest/ParTest.c **** 	  WinAVR.
  39:ParTest/ParTest.c **** */
  40:ParTest/ParTest.c **** 
  41:ParTest/ParTest.c **** #include "FreeRTOS.h"
  42:ParTest/ParTest.c **** #include "task.h"
  43:ParTest/ParTest.c **** #include "partest.h"
  44:ParTest/ParTest.c **** 
  45:ParTest/ParTest.c **** /*-----------------------------------------------------------
  46:ParTest/ParTest.c ****  * Simple parallel port IO routines.
  47:ParTest/ParTest.c ****  *-----------------------------------------------------------*/
  48:ParTest/ParTest.c **** 
  49:ParTest/ParTest.c **** #define partstALL_BITS_OUTPUT			( ( unsigned char ) 0xff )
  50:ParTest/ParTest.c **** #define partstALL_OUTPUTS_OFF			( ( unsigned char ) 0xff )
  51:ParTest/ParTest.c **** #define partstMAX_OUTPUT_LED			( ( unsigned char ) 7 )
  52:ParTest/ParTest.c **** 
  53:ParTest/ParTest.c **** static volatile unsigned char ucCurrentOutputValue = partstALL_OUTPUTS_OFF; /*lint !e956 File scope
  54:ParTest/ParTest.c **** 
  55:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  56:ParTest/ParTest.c **** 
  57:ParTest/ParTest.c **** void vParTestInitialise( void )
  58:ParTest/ParTest.c **** {
 176               	.LM0:
 177               	.LFBB1:
 178               	/* prologue: function */
 179               	/* frame size = 0 */
 180               	/* stack size = 0 */
 181               	.L__stack_usage = 0
  59:ParTest/ParTest.c **** 	ucCurrentOutputValue = partstALL_OUTPUTS_OFF;
 183               	.LM1:
 184 0000 8FEF      		ldi r24,lo8(-1)
 185 0002 8093 0000 		sts ucCurrentOutputValue,r24
  60:ParTest/ParTest.c **** 
  61:ParTest/ParTest.c **** 	/* Set port B direction to outputs.  Start with all output off. */
  62:ParTest/ParTest.c **** 	DDRB = partstALL_BITS_OUTPUT;
 187               	.LM2:
 188 0006 84B9      		out 0x4,r24
  63:ParTest/ParTest.c **** 	PORTB = ucCurrentOutputValue;
 190               	.LM3:
 191 0008 8091 0000 		lds r24,ucCurrentOutputValue
 192 000c 85B9      		out 0x5,r24
 193 000e 0895      		ret
 195               	.Lscope1:
 197               		.stabd	78,0,0
 201               	.global	vParTestSetLED
 203               	vParTestSetLED:
 204               		.stabd	46,0,0
  64:ParTest/ParTest.c **** }
  65:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  66:ParTest/ParTest.c **** 
  67:ParTest/ParTest.c **** void vParTestSetLED( unsigned portBASE_TYPE uxLED, signed portBASE_TYPE xValue )
  68:ParTest/ParTest.c **** {
 206               	.LM4:
 207               	.LFBB2:
 208 0010 1F93      		push r17
 209 0012 CF93      		push r28
 210 0014 DF93      		push r29
 211               	/* prologue: function */
 212               	/* frame size = 0 */
 213               	/* stack size = 3 */
 214               	.L__stack_usage = 3
  69:ParTest/ParTest.c **** unsigned char ucBit = ( unsigned char ) 1;
  70:ParTest/ParTest.c **** 
  71:ParTest/ParTest.c **** 	if( uxLED <= partstMAX_OUTPUT_LED )
 216               	.LM5:
 217 0016 8830      		cpi r24,lo8(8)
 218 0018 00F4      		brsh .L2
 219 001a 162F      		mov r17,r22
  72:ParTest/ParTest.c **** 	{
  73:ParTest/ParTest.c **** 		ucBit <<= uxLED;	
 221               	.LM6:
 222 001c C1E0      		ldi r28,lo8(1)
 223 001e D0E0      		ldi r29,0
 224 0020 00C0      		rjmp 2f
 225               		1:
 226 0022 CC0F      		lsl r28
 227               		2:
 228 0024 8A95      		dec r24
 229 0026 02F4      		brpl 1b
  74:ParTest/ParTest.c **** 
  75:ParTest/ParTest.c **** 		vTaskSuspendAll();
 231               	.LM7:
 232 0028 0E94 0000 		call vTaskSuspendAll
  76:ParTest/ParTest.c **** 		{
  77:ParTest/ParTest.c **** 			if( xValue == pdTRUE )
  78:ParTest/ParTest.c **** 			{
  79:ParTest/ParTest.c **** 				ucBit ^= ( unsigned char ) 0xff;
  80:ParTest/ParTest.c **** 				ucCurrentOutputValue &= ucBit;
 234               	.LM8:
 235 002c 8091 0000 		lds r24,ucCurrentOutputValue
  77:ParTest/ParTest.c **** 			{
 237               	.LM9:
 238 0030 1130      		cpi r17,lo8(1)
 239 0032 01F4      		brne .L4
  79:ParTest/ParTest.c **** 				ucCurrentOutputValue &= ucBit;
 241               	.LM10:
 242 0034 C095      		com r28
 244               	.LM11:
 245 0036 C823      		and r28,r24
 246 0038 00C0      		rjmp .L6
 247               	.L4:
  81:ParTest/ParTest.c **** 			}
  82:ParTest/ParTest.c **** 			else
  83:ParTest/ParTest.c **** 			{
  84:ParTest/ParTest.c **** 				ucCurrentOutputValue |= ucBit;
 249               	.LM12:
 250 003a C82B      		or r28,r24
 251               	.L6:
 252 003c C093 0000 		sts ucCurrentOutputValue,r28
  85:ParTest/ParTest.c **** 			}
  86:ParTest/ParTest.c **** 
  87:ParTest/ParTest.c **** 			PORTB = ucCurrentOutputValue;
 254               	.LM13:
 255 0040 8091 0000 		lds r24,ucCurrentOutputValue
 256 0044 85B9      		out 0x5,r24
 257               	/* epilogue start */
  88:ParTest/ParTest.c **** 		}
  89:ParTest/ParTest.c **** 		xTaskResumeAll();
  90:ParTest/ParTest.c **** 	}
  91:ParTest/ParTest.c **** }
 259               	.LM14:
 260 0046 DF91      		pop r29
 261 0048 CF91      		pop r28
 262 004a 1F91      		pop r17
  89:ParTest/ParTest.c **** 	}
 264               	.LM15:
 265 004c 0C94 0000 		jmp xTaskResumeAll
 266               	.L2:
 267               	/* epilogue start */
 269               	.LM16:
 270 0050 DF91      		pop r29
 271 0052 CF91      		pop r28
 272 0054 1F91      		pop r17
 273 0056 0895      		ret
 275               	.Lscope2:
 277               		.stabd	78,0,0
 280               	.global	vParTestToggleLED
 282               	vParTestToggleLED:
 283               		.stabd	46,0,0
  92:ParTest/ParTest.c **** /*-----------------------------------------------------------*/
  93:ParTest/ParTest.c **** 
  94:ParTest/ParTest.c **** void vParTestToggleLED( unsigned portBASE_TYPE uxLED )
  95:ParTest/ParTest.c **** {
 285               	.LM17:
 286               	.LFBB3:
 287 0058 CF93      		push r28
 288 005a DF93      		push r29
 289               	/* prologue: function */
 290               	/* frame size = 0 */
 291               	/* stack size = 2 */
 292               	.L__stack_usage = 2
  96:ParTest/ParTest.c **** unsigned char ucBit;
  97:ParTest/ParTest.c **** 
  98:ParTest/ParTest.c **** 	if( uxLED <= partstMAX_OUTPUT_LED )
 294               	.LM18:
 295 005c 8830      		cpi r24,lo8(8)
 296 005e 00F4      		brsh .L8
  99:ParTest/ParTest.c **** 	{
 100:ParTest/ParTest.c **** 		ucBit = ( ( unsigned char ) 1 ) << uxLED;
 298               	.LM19:
 299 0060 C1E0      		ldi r28,lo8(1)
 300 0062 D0E0      		ldi r29,0
 301 0064 00C0      		rjmp 2f
 302               		1:
 303 0066 CC0F      		lsl r28
 304               		2:
 305 0068 8A95      		dec r24
 306 006a 02F4      		brpl 1b
 101:ParTest/ParTest.c **** 
 102:ParTest/ParTest.c **** 		vTaskSuspendAll();
 308               	.LM20:
 309 006c 0E94 0000 		call vTaskSuspendAll
 103:ParTest/ParTest.c **** 		{
 104:ParTest/ParTest.c **** 			if( ucCurrentOutputValue & ucBit )
 311               	.LM21:
 312 0070 8091 0000 		lds r24,ucCurrentOutputValue
 313 0074 8C23      		and r24,r28
 314 0076 01F0      		breq .L10
 105:ParTest/ParTest.c **** 			{
 106:ParTest/ParTest.c **** 				ucCurrentOutputValue &= ~ucBit;
 316               	.LM22:
 317 0078 8091 0000 		lds r24,ucCurrentOutputValue
 318 007c C095      		com r28
 319 007e C823      		and r28,r24
 320 0080 00C0      		rjmp .L12
 321               	.L10:
 107:ParTest/ParTest.c **** 			}
 108:ParTest/ParTest.c **** 			else
 109:ParTest/ParTest.c **** 			{
 110:ParTest/ParTest.c **** 				ucCurrentOutputValue |= ucBit;
 323               	.LM23:
 324 0082 8091 0000 		lds r24,ucCurrentOutputValue
 325 0086 C82B      		or r28,r24
 326               	.L12:
 327 0088 C093 0000 		sts ucCurrentOutputValue,r28
 111:ParTest/ParTest.c **** 			}
 112:ParTest/ParTest.c **** 
 113:ParTest/ParTest.c **** 			PORTB = ucCurrentOutputValue;
 329               	.LM24:
 330 008c 8091 0000 		lds r24,ucCurrentOutputValue
 331 0090 85B9      		out 0x5,r24
 332               	/* epilogue start */
 114:ParTest/ParTest.c **** 		}
 115:ParTest/ParTest.c **** 		xTaskResumeAll();			
 116:ParTest/ParTest.c **** 	}
 117:ParTest/ParTest.c **** }
 334               	.LM25:
 335 0092 DF91      		pop r29
 336 0094 CF91      		pop r28
 115:ParTest/ParTest.c **** 	}
 338               	.LM26:
 339 0096 0C94 0000 		jmp xTaskResumeAll
 340               	.L8:
 341               	/* epilogue start */
 343               	.LM27:
 344 009a DF91      		pop r29
 345 009c CF91      		pop r28
 346 009e 0895      		ret
 348               	.Lscope3:
 350               		.stabd	78,0,0
 351               		.data
 354               	ucCurrentOutputValue:
 355 0000 FF        		.byte	-1
 357               		.text
 359               	.Letext0:
 360               		.ident	"GCC: (GNU) 4.9.2"
 361               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ParTest.c
     /tmp/ccU6XAnU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccU6XAnU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccU6XAnU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccU6XAnU.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccU6XAnU.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccU6XAnU.s:173    .text:0000000000000000 vParTestInitialise
     /tmp/ccU6XAnU.s:354    .data:0000000000000000 ucCurrentOutputValue
     /tmp/ccU6XAnU.s:203    .text:0000000000000010 vParTestSetLED
     /tmp/ccU6XAnU.s:282    .text:0000000000000058 vParTestToggleLED

UNDEFINED SYMBOLS
vTaskSuspendAll
xTaskResumeAll
__do_copy_data
